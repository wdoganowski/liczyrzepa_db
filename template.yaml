AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.9
  SAM Template for liczyrzepa-api

Parameters:
  CreateS3Bucket: 
    Description: Set to 'Yes' to create the LiczyrzepaS3Bucket
    Type: String
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'
  DeploymentStage:
    Description: The stage to which it should be deployed
    Type: String
    Default: Prod
    AllowedValues:
      - Dev
      - Prod

Conditions:
  IfCreateS3Bucket:
    Fn::Equals:
      - !Ref CreateS3Bucket
      - 'Yes'

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    Runtime: python3.9
    MemorySize: 128
    Tracing: Active
    Environment:
      Variables:
        POWERTOOLS_SERVICE_NAME: liczyrzepa_api
        LOG_LEVEL: DEBUG
  Api:
    TracingEnabled: true

Resources:
  # LiczyrzepaAPIStage:
  #   Type: AWS::Serverless::Api
  #   Properties:
  #     # Cors:
  #     #   AllowHeaders: "'*'"
  #     #   AllowMethods: "'*'"
  #     #   AllowOrigin: "'*'"
  #     StageName: !Ref DeploymentStage

  LiczyrzepaAPIFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Zip
      CodeUri: ./api
      Handler: router.lambda_handler
      Architectures:
      - x86_64
      Policies:
      - AmazonDynamoDBFullAccess
      Events:
        GetCountries:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /country
            Method: get
        GetCountry:
          Type: Api
          Properties:
            Path: /country/{country}
            Method: get
        GetCountryRegions:
          Type: Api
          Properties:
            Path: /country/{country}/regions
            Method: get
        GetRegion:
          Type: Api
          Properties:
            Path: /region/{region}
            Method: get
        GetRegionRanges:
          Type: Api
          Properties:
            Path: /region/{region}/ranges
            Method: get
        GetRange:
          Type: Api
          Properties:
            Path: /range/{range}
            Method: get
        GetRangeMounts:
          Type: Api
          Properties:
            Path: /range/{range}/mounts
            Method: get
        GetMount:
          Type: Api
          Properties:
            Path: /mount/{mountain}
            Method: get
        GetMountsByElevation:
          Type: Api
          Properties:
            Path: /mount/elevation/{min}/{max}
            Method: get
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: 
        Fn::Join:
        - ''
        - - 'ApplicationInsights-SAM-'
          - !Ref AWS::StackName
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName: 
        Fn::Join:
        - ''
        - - 'ApplicationInsights-SAM-'
          - !Ref AWS::StackName
      AutoConfigurationEnabled: true
    DependsOn: ApplicationResourceGroup
  # LiczyrzepaAPIFunctionPermissions:
  #   Type: AWS::Lambda::Permission
  #   Properties:
  #     FunctionName: !Ref LiczyrzepaAPIFunction
  #     Action: lambda:InvokeFunctionUrl
  #     Principal: "*"
  #     FunctionUrlAuthType: NONE
  # LiczyrzepaAPIFunctionUrl:
  #   Type: AWS::Lambda::Url
  #   Properties:
  #     AuthType: NONE
  #     TargetFunctionArn: !Ref LiczyrzepaAPIFunction

  # DynamoDB table to store item: {id: &lt;ID&gt;, name: &lt;NAME&gt;}
  LiczyrzepaDB:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: Liczyrzepa
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        - AttributeName: GSI1PK
          AttributeType: S
        - AttributeName: GSI1SK
          AttributeType: S
        - AttributeName: GSI2PK
          AttributeType: S
        - AttributeName: GSI2SK
          AttributeType: S
        - AttributeName: GSI3PK
          AttributeType: S
        - AttributeName: GSI3SK
          AttributeType: S
        - AttributeName: GSI4PK
          AttributeType: S
        - AttributeName: GSI4SK
          AttributeType: S
        - AttributeName: GSI5PK
          AttributeType: S
        - AttributeName: GSI5SK
          AttributeType: S
        - AttributeName: GSI6PK
          AttributeType: S
        - AttributeName: GSI6SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      GlobalSecondaryIndexes: # https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-modeling-nosql-B.html
        - IndexName: GSI1
          KeySchema:
            - AttributeName: GSI1PK
              KeyType: HASH
            - AttributeName: GSI1SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: GSI2
          KeySchema:
            - AttributeName: GSI2PK
              KeyType: HASH
            - AttributeName: GSI2SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: GSI3
          KeySchema:
            - AttributeName: GSI3PK
              KeyType: HASH
            - AttributeName: GSI3SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: GSI4
          KeySchema:
            - AttributeName: GSI4PK
              KeyType: HASH
            - AttributeName: GSI4SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: GSI5
          KeySchema:
            - AttributeName: GSI5PK
              KeyType: HASH
            - AttributeName: GSI5SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: GSI6
          KeySchema:
            - AttributeName: GSI6PK
              KeyType: HASH
            - AttributeName: GSI6SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST
      SSESpecification: # Server side encryption managed by AWS - Free of charge
        SSEEnabled: False
      ImportSourceSpecification:
        InputCompressionType: NONE
        InputFormat: CSV
        S3BucketSource:
          S3Bucket: liczyrzepa-s3-bucket-02
          S3KeyPrefix: 'db-backup/liczyrzepa_db.csv'

  LiczyrzepaS3Bucket:
    Type: AWS::S3::Bucket
    Condition: IfCreateS3Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketName: liczyrzepa-s3-bucket-02
      VersioningConfiguration:
        Status: Suspended

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  LiczyrzepaApi:
    Description: "API Gateway endpoint URL for Prod stage for Liczyrzepa API function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/${DeploymentStage}/"
  LiczyrzepaAPIFunction:
    Description: "Liczyrzepa API Lambda Function ARN"
    Value: !GetAtt LiczyrzepaAPIFunction.Arn
  LiczyrzepaAPIFunctionIamRole:
    Description: "Implicit IAM Role created for Liczyrzepa API function"
    Value: !GetAtt LiczyrzepaAPIFunctionRole.Arn
  LiczyrzepaDB:
    Description: "Database"
    Value: !GetAtt LiczyrzepaDB.Arn
